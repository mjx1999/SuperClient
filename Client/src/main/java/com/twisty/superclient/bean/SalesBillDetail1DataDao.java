package com.twisty.superclient.bean;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table SALES_BILL_DETAIL1_DATA.
 */
public class SalesBillDetail1DataDao extends AbstractDao<SalesBillDetail1Data, Void> {

    public static final String TABLENAME = "SALES_BILL_DETAIL1_DATA";

    public SalesBillDetail1DataDao(DaoConfig config) {
        super(config);
    }

    ;


    public SalesBillDetail1DataDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /**
     * Creates the underlying database table.
     */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists ? "IF NOT EXISTS " : "";
        db.execSQL("CREATE TABLE " + constraint + "'SALES_BILL_DETAIL1_DATA' (" + //
                "'BILL_ID' INTEGER," + // 0: BillID
                "'ITEM_NO' INTEGER," + // 1: ItemNO
                "'APRICE' REAL," + // 2: APrice
                "'AMOUNT' REAL," + // 3: Amount
                "'BREFER_ID' INTEGER," + // 4: BReferID
                "'DISC' REAL," + // 5: Disc
                "'DISC_AMT' REAL," + // 6: DiscAmt
                "'REFER_QTY' REAL," + // 7: ReferQty
                "'IOQTY' REAL," + // 8: IOQty
                "'GOODS_ID' INTEGER," + // 9: GoodsID
                "'GOODS_AMT' REAL," + // 10: GoodsAmt
                "'IS_LARGESS' INTEGER," + // 11: IsLargess
                "'ORIG_PRICE' REAL," + // 12: OrigPrice
                "'ORIG_TAX_PRICE' REAL," + // 13: OrigTaxPrice
                "'QUANTITY' REAL," + // 14: Quantity
                "'REFER_BILL_CODE' TEXT," + // 15: ReferBillCode
                "'UNIT_NAME' TEXT," + // 16: UnitName
                "'STORE_CODE' TEXT," + // 17: StoreCode
                "'SPECS' TEXT," + // 18: Specs
                "'STORE_NAME' TEXT," + // 19: StoreName
                "'GOODS_NAME' TEXT," + // 20: GoodsName
                "'GOODS_CODE' TEXT," + // 21: GoodsCode
                "'BAR_CODE' TEXT," + // 22: BarCode
                "'SHORT_NAME' TEXT," + // 23: ShortName
                "'REFER_BILL_ID' INTEGER," + // 24: ReferBillID
                "'REFER_BILL_TYPE' INTEGER," + // 25: ReferBillType
                "'REFER_ITEM_NO' INTEGER," + // 26: ReferItemNo
                "'STORE_ID' INTEGER," + // 27: StoreID
                "'TAX_AMT' REAL," + // 28: TaxAmt
                "'TAX_PRICE' REAL," + // 29: TaxPrice
                "'TAX_RATE' REAL," + // 30: TaxRate
                "'UNIT_ID' INTEGER," + // 31: UnitID
                "'UNIT_PRICE' REAL," + // 32: UnitPrice
                "'UNIT_QUANTITY' REAL," + // 33: UnitQuantity
                "'UNIT_RATE' REAL," + // 34: UnitRate
                "'USER_DEF1' TEXT," + // 35: UserDef1
                "'USER_DEF2' TEXT," + // 36: UserDef2
                "'USER_DEF3' TEXT," + // 37: UserDef3
                "'USER_DEF4' TEXT," + // 38: UserDef4
                "'USER_DEF5' TEXT," + // 39: UserDef5
                "'USER_DEF6' TEXT," + // 40: UserDef6
                "'USER_DEF7' TEXT," + // 41: UserDef7
                "'USER_DEF8' TEXT," + // 42: UserDef8
                "'USER_DEF9' TEXT," + // 43: UserDef9
                "'USER_DEF10' TEXT);"); // 44: UserDef10
        // Add Indexes
        db.execSQL("CREATE INDEX " + constraint + "IDX_SALES_BILL_DETAIL1_DATA_BILL_ID ON SALES_BILL_DETAIL1_DATA" +
                " (BILL_ID);");
    }

    /**
     * Drops the underlying database table.
     */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'SALES_BILL_DETAIL1_DATA'";
        db.execSQL(sql);
    }

    /**
     * @inheritdoc
     */
    @Override
    protected void bindValues(SQLiteStatement stmt, SalesBillDetail1Data entity) {
        stmt.clearBindings();

        Long BillID = entity.getBillID();
        if (BillID != null) {
            stmt.bindLong(1, BillID);
        }

        Integer ItemNO = entity.getItemNO();
        if (ItemNO != null) {
            stmt.bindLong(2, ItemNO);
        }

        Double APrice = entity.getAPrice();
        if (APrice != null) {
            stmt.bindDouble(3, APrice);
        }

        Double Amount = entity.getAmount();
        if (Amount != null) {
            stmt.bindDouble(4, Amount);
        }

        Long BReferID = entity.getBReferID();
        if (BReferID != null) {
            stmt.bindLong(5, BReferID);
        }

        Double Disc = entity.getDisc();
        if (Disc != null) {
            stmt.bindDouble(6, Disc);
        }

        Double DiscAmt = entity.getDiscAmt();
        if (DiscAmt != null) {
            stmt.bindDouble(7, DiscAmt);
        }

        Double ReferQty = entity.getReferQty();
        if (ReferQty != null) {
            stmt.bindDouble(8, ReferQty);
        }

        Double IOQty = entity.getIOQty();
        if (IOQty != null) {
            stmt.bindDouble(9, IOQty);
        }

        Long GoodsID = entity.getGoodsID();
        if (GoodsID != null) {
            stmt.bindLong(10, GoodsID);
        }

        Double GoodsAmt = entity.getGoodsAmt();
        if (GoodsAmt != null) {
            stmt.bindDouble(11, GoodsAmt);
        }

        Integer IsLargess = entity.getIsLargess();
        if (IsLargess != null) {
            stmt.bindLong(12, IsLargess);
        }

        Double OrigPrice = entity.getOrigPrice();
        if (OrigPrice != null) {
            stmt.bindDouble(13, OrigPrice);
        }

        Double OrigTaxPrice = entity.getOrigTaxPrice();
        if (OrigTaxPrice != null) {
            stmt.bindDouble(14, OrigTaxPrice);
        }

        Double Quantity = entity.getQuantity();
        if (Quantity != null) {
            stmt.bindDouble(15, Quantity);
        }

        String ReferBillCode = entity.getReferBillCode();
        if (ReferBillCode != null) {
            stmt.bindString(16, ReferBillCode);
        }

        String UnitName = entity.getUnitName();
        if (UnitName != null) {
            stmt.bindString(17, UnitName);
        }

        String StoreCode = entity.getStoreCode();
        if (StoreCode != null) {
            stmt.bindString(18, StoreCode);
        }

        String Specs = entity.getSpecs();
        if (Specs != null) {
            stmt.bindString(19, Specs);
        }

        String StoreName = entity.getStoreName();
        if (StoreName != null) {
            stmt.bindString(20, StoreName);
        }

        String GoodsName = entity.getGoodsName();
        if (GoodsName != null) {
            stmt.bindString(21, GoodsName);
        }

        String GoodsCode = entity.getGoodsCode();
        if (GoodsCode != null) {
            stmt.bindString(22, GoodsCode);
        }

        String BarCode = entity.getBarCode();
        if (BarCode != null) {
            stmt.bindString(23, BarCode);
        }

        String ShortName = entity.getShortName();
        if (ShortName != null) {
            stmt.bindString(24, ShortName);
        }

        Long ReferBillID = entity.getReferBillID();
        if (ReferBillID != null) {
            stmt.bindLong(25, ReferBillID);
        }

        Integer ReferBillType = entity.getReferBillType();
        if (ReferBillType != null) {
            stmt.bindLong(26, ReferBillType);
        }

        Integer ReferItemNo = entity.getReferItemNo();
        if (ReferItemNo != null) {
            stmt.bindLong(27, ReferItemNo);
        }

        Long StoreID = entity.getStoreID();
        if (StoreID != null) {
            stmt.bindLong(28, StoreID);
        }

        Double TaxAmt = entity.getTaxAmt();
        if (TaxAmt != null) {
            stmt.bindDouble(29, TaxAmt);
        }

        Double TaxPrice = entity.getTaxPrice();
        if (TaxPrice != null) {
            stmt.bindDouble(30, TaxPrice);
        }

        Double TaxRate = entity.getTaxRate();
        if (TaxRate != null) {
            stmt.bindDouble(31, TaxRate);
        }

        Long UnitID = entity.getUnitID();
        if (UnitID != null) {
            stmt.bindLong(32, UnitID);
        }

        Double UnitPrice = entity.getUnitPrice();
        if (UnitPrice != null) {
            stmt.bindDouble(33, UnitPrice);
        }

        Double UnitQuantity = entity.getUnitQuantity();
        if (UnitQuantity != null) {
            stmt.bindDouble(34, UnitQuantity);
        }

        Double UnitRate = entity.getUnitRate();
        if (UnitRate != null) {
            stmt.bindDouble(35, UnitRate);
        }

        String UserDef1 = entity.getUserDef1();
        if (UserDef1 != null) {
            stmt.bindString(36, UserDef1);
        }

        String UserDef2 = entity.getUserDef2();
        if (UserDef2 != null) {
            stmt.bindString(37, UserDef2);
        }

        String UserDef3 = entity.getUserDef3();
        if (UserDef3 != null) {
            stmt.bindString(38, UserDef3);
        }

        String UserDef4 = entity.getUserDef4();
        if (UserDef4 != null) {
            stmt.bindString(39, UserDef4);
        }

        String UserDef5 = entity.getUserDef5();
        if (UserDef5 != null) {
            stmt.bindString(40, UserDef5);
        }

        String UserDef6 = entity.getUserDef6();
        if (UserDef6 != null) {
            stmt.bindString(41, UserDef6);
        }

        String UserDef7 = entity.getUserDef7();
        if (UserDef7 != null) {
            stmt.bindString(42, UserDef7);
        }

        String UserDef8 = entity.getUserDef8();
        if (UserDef8 != null) {
            stmt.bindString(43, UserDef8);
        }

        String UserDef9 = entity.getUserDef9();
        if (UserDef9 != null) {
            stmt.bindString(44, UserDef9);
        }

        String UserDef10 = entity.getUserDef10();
        if (UserDef10 != null) {
            stmt.bindString(45, UserDef10);
        }
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public SalesBillDetail1Data readEntity(Cursor cursor, int offset) {
        SalesBillDetail1Data entity = new SalesBillDetail1Data( //
                cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // BillID
                cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1), // ItemNO
                cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2), // APrice
                cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3), // Amount
                cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4), // BReferID
                cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5), // Disc
                cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6), // DiscAmt
                cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7), // ReferQty
                cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8), // IOQty
                cursor.isNull(offset + 9) ? null : cursor.getLong(offset + 9), // GoodsID
                cursor.isNull(offset + 10) ? null : cursor.getDouble(offset + 10), // GoodsAmt
                cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11), // IsLargess
                cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12), // OrigPrice
                cursor.isNull(offset + 13) ? null : cursor.getDouble(offset + 13), // OrigTaxPrice
                cursor.isNull(offset + 14) ? null : cursor.getDouble(offset + 14), // Quantity
                cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // ReferBillCode
                cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // UnitName
                cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // StoreCode
                cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // Specs
                cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // StoreName
                cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // GoodsName
                cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // GoodsCode
                cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // BarCode
                cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // ShortName
                cursor.isNull(offset + 24) ? null : cursor.getLong(offset + 24), // ReferBillID
                cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25), // ReferBillType
                cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26), // ReferItemNo
                cursor.isNull(offset + 27) ? null : cursor.getLong(offset + 27), // StoreID
                cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28), // TaxAmt
                cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29), // TaxPrice
                cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30), // TaxRate
                cursor.isNull(offset + 31) ? null : cursor.getLong(offset + 31), // UnitID
                cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32), // UnitPrice
                cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33), // UnitQuantity
                cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34), // UnitRate
                cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // UserDef1
                cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // UserDef2
                cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37), // UserDef3
                cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38), // UserDef4
                cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39), // UserDef5
                cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40), // UserDef6
                cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41), // UserDef7
                cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42), // UserDef8
                cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43), // UserDef9
                cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44) // UserDef10
        );
        return entity;
    }

    /**
     * @inheritdoc
     */
    @Override
    public void readEntity(Cursor cursor, SalesBillDetail1Data entity, int offset) {
        entity.setBillID(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setItemNO(cursor.isNull(offset + 1) ? null : cursor.getInt(offset + 1));
        entity.setAPrice(cursor.isNull(offset + 2) ? null : cursor.getDouble(offset + 2));
        entity.setAmount(cursor.isNull(offset + 3) ? null : cursor.getDouble(offset + 3));
        entity.setBReferID(cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4));
        entity.setDisc(cursor.isNull(offset + 5) ? null : cursor.getDouble(offset + 5));
        entity.setDiscAmt(cursor.isNull(offset + 6) ? null : cursor.getDouble(offset + 6));
        entity.setReferQty(cursor.isNull(offset + 7) ? null : cursor.getDouble(offset + 7));
        entity.setIOQty(cursor.isNull(offset + 8) ? null : cursor.getDouble(offset + 8));
        entity.setGoodsID(cursor.isNull(offset + 9) ? null : cursor.getLong(offset + 9));
        entity.setGoodsAmt(cursor.isNull(offset + 10) ? null : cursor.getDouble(offset + 10));
        entity.setIsLargess(cursor.isNull(offset + 11) ? null : cursor.getInt(offset + 11));
        entity.setOrigPrice(cursor.isNull(offset + 12) ? null : cursor.getDouble(offset + 12));
        entity.setOrigTaxPrice(cursor.isNull(offset + 13) ? null : cursor.getDouble(offset + 13));
        entity.setQuantity(cursor.isNull(offset + 14) ? null : cursor.getDouble(offset + 14));
        entity.setReferBillCode(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setUnitName(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setStoreCode(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setSpecs(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setStoreName(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setGoodsName(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setGoodsCode(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setBarCode(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setShortName(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setReferBillID(cursor.isNull(offset + 24) ? null : cursor.getLong(offset + 24));
        entity.setReferBillType(cursor.isNull(offset + 25) ? null : cursor.getInt(offset + 25));
        entity.setReferItemNo(cursor.isNull(offset + 26) ? null : cursor.getInt(offset + 26));
        entity.setStoreID(cursor.isNull(offset + 27) ? null : cursor.getLong(offset + 27));
        entity.setTaxAmt(cursor.isNull(offset + 28) ? null : cursor.getDouble(offset + 28));
        entity.setTaxPrice(cursor.isNull(offset + 29) ? null : cursor.getDouble(offset + 29));
        entity.setTaxRate(cursor.isNull(offset + 30) ? null : cursor.getDouble(offset + 30));
        entity.setUnitID(cursor.isNull(offset + 31) ? null : cursor.getLong(offset + 31));
        entity.setUnitPrice(cursor.isNull(offset + 32) ? null : cursor.getDouble(offset + 32));
        entity.setUnitQuantity(cursor.isNull(offset + 33) ? null : cursor.getDouble(offset + 33));
        entity.setUnitRate(cursor.isNull(offset + 34) ? null : cursor.getDouble(offset + 34));
        entity.setUserDef1(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setUserDef2(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setUserDef3(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
        entity.setUserDef4(cursor.isNull(offset + 38) ? null : cursor.getString(offset + 38));
        entity.setUserDef5(cursor.isNull(offset + 39) ? null : cursor.getString(offset + 39));
        entity.setUserDef6(cursor.isNull(offset + 40) ? null : cursor.getString(offset + 40));
        entity.setUserDef7(cursor.isNull(offset + 41) ? null : cursor.getString(offset + 41));
        entity.setUserDef8(cursor.isNull(offset + 42) ? null : cursor.getString(offset + 42));
        entity.setUserDef9(cursor.isNull(offset + 43) ? null : cursor.getString(offset + 43));
        entity.setUserDef10(cursor.isNull(offset + 44) ? null : cursor.getString(offset + 44));
    }

    /**
     * @inheritdoc
     */
    @Override
    protected Void updateKeyAfterInsert(SalesBillDetail1Data entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    public Void getKey(SalesBillDetail1Data entity) {
        return null;
    }

    /**
     * @inheritdoc
     */
    @Override
    protected boolean isEntityUpdateable() {
        return true;
    }

    /**
     * Properties of entity SalesBillDetail1Data.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property BillID = new Property(0, Long.class, "BillID", false, "BILL_ID");
        public final static Property ItemNO = new Property(1, Integer.class, "ItemNO", false, "ITEM_NO");
        public final static Property APrice = new Property(2, Double.class, "APrice", false, "APRICE");
        public final static Property Amount = new Property(3, Double.class, "Amount", false, "AMOUNT");
        public final static Property BReferID = new Property(4, Long.class, "BReferID", false, "BREFER_ID");
        public final static Property Disc = new Property(5, Double.class, "Disc", false, "DISC");
        public final static Property DiscAmt = new Property(6, Double.class, "DiscAmt", false, "DISC_AMT");
        public final static Property ReferQty = new Property(7, Double.class, "ReferQty", false, "REFER_QTY");
        public final static Property IOQty = new Property(8, Double.class, "IOQty", false, "IOQTY");
        public final static Property GoodsID = new Property(9, Long.class, "GoodsID", false, "GOODS_ID");
        public final static Property GoodsAmt = new Property(10, Double.class, "GoodsAmt", false, "GOODS_AMT");
        public final static Property IsLargess = new Property(11, Integer.class, "IsLargess", false, "IS_LARGESS");
        public final static Property OrigPrice = new Property(12, Double.class, "OrigPrice", false, "ORIG_PRICE");
        public final static Property OrigTaxPrice = new Property(13, Double.class, "OrigTaxPrice", false, "ORIG_TAX_PRICE");
        public final static Property Quantity = new Property(14, Double.class, "Quantity", false, "QUANTITY");
        public final static Property ReferBillCode = new Property(15, String.class, "ReferBillCode", false, "REFER_BILL_CODE");
        public final static Property UnitName = new Property(16, String.class, "UnitName", false, "UNIT_NAME");
        public final static Property StoreCode = new Property(17, String.class, "StoreCode", false, "STORE_CODE");
        public final static Property Specs = new Property(18, String.class, "Specs", false, "SPECS");
        public final static Property StoreName = new Property(19, String.class, "StoreName", false, "STORE_NAME");
        public final static Property GoodsName = new Property(20, String.class, "GoodsName", false, "GOODS_NAME");
        public final static Property GoodsCode = new Property(21, String.class, "GoodsCode", false, "GOODS_CODE");
        public final static Property BarCode = new Property(22, String.class, "BarCode", false, "BAR_CODE");
        public final static Property ShortName = new Property(23, String.class, "ShortName", false, "SHORT_NAME");
        public final static Property ReferBillID = new Property(24, Long.class, "ReferBillID", false, "REFER_BILL_ID");
        public final static Property ReferBillType = new Property(25, Integer.class, "ReferBillType", false, "REFER_BILL_TYPE");
        public final static Property ReferItemNo = new Property(26, Integer.class, "ReferItemNo", false, "REFER_ITEM_NO");
        public final static Property StoreID = new Property(27, Long.class, "StoreID", false, "STORE_ID");
        public final static Property TaxAmt = new Property(28, Double.class, "TaxAmt", false, "TAX_AMT");
        public final static Property TaxPrice = new Property(29, Double.class, "TaxPrice", false, "TAX_PRICE");
        public final static Property TaxRate = new Property(30, Double.class, "TaxRate", false, "TAX_RATE");
        public final static Property UnitID = new Property(31, Long.class, "UnitID", false, "UNIT_ID");
        public final static Property UnitPrice = new Property(32, Double.class, "UnitPrice", false, "UNIT_PRICE");
        public final static Property UnitQuantity = new Property(33, Double.class, "UnitQuantity", false, "UNIT_QUANTITY");
        public final static Property UnitRate = new Property(34, Double.class, "UnitRate", false, "UNIT_RATE");
        public final static Property UserDef1 = new Property(35, String.class, "UserDef1", false, "USER_DEF1");
        public final static Property UserDef2 = new Property(36, String.class, "UserDef2", false, "USER_DEF2");
        public final static Property UserDef3 = new Property(37, String.class, "UserDef3", false, "USER_DEF3");
        public final static Property UserDef4 = new Property(38, String.class, "UserDef4", false, "USER_DEF4");
        public final static Property UserDef5 = new Property(39, String.class, "UserDef5", false, "USER_DEF5");
        public final static Property UserDef6 = new Property(40, String.class, "UserDef6", false, "USER_DEF6");
        public final static Property UserDef7 = new Property(41, String.class, "UserDef7", false, "USER_DEF7");
        public final static Property UserDef8 = new Property(42, String.class, "UserDef8", false, "USER_DEF8");
        public final static Property UserDef9 = new Property(43, String.class, "UserDef9", false, "USER_DEF9");
        public final static Property UserDef10 = new Property(44, String.class, "UserDef10", false, "USER_DEF10");
    }

}
