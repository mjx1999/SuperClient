package com.twisty.superclient.bean;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accsetDaoConfig;
    private final DaoConfig areaDaoConfig;
    private final DaoConfig departmentDaoConfig;
    private final DaoConfig employeeDaoConfig;
    private final DaoConfig operatorDaoConfig;
    private final DaoConfig traderDaoConfig;
    private final DaoConfig tradeTypeDaoConfig;

    private final AccsetDao accsetDao;
    private final AreaDao areaDao;
    private final DepartmentDao departmentDao;
    private final EmployeeDao employeeDao;
    private final OperatorDao operatorDao;
    private final TraderDao traderDao;
    private final TradeTypeDao tradeTypeDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accsetDaoConfig = daoConfigMap.get(AccsetDao.class).clone();
        accsetDaoConfig.initIdentityScope(type);

        areaDaoConfig = daoConfigMap.get(AreaDao.class).clone();
        areaDaoConfig.initIdentityScope(type);

        departmentDaoConfig = daoConfigMap.get(DepartmentDao.class).clone();
        departmentDaoConfig.initIdentityScope(type);

        employeeDaoConfig = daoConfigMap.get(EmployeeDao.class).clone();
        employeeDaoConfig.initIdentityScope(type);

        operatorDaoConfig = daoConfigMap.get(OperatorDao.class).clone();
        operatorDaoConfig.initIdentityScope(type);

        traderDaoConfig = daoConfigMap.get(TraderDao.class).clone();
        traderDaoConfig.initIdentityScope(type);

        tradeTypeDaoConfig = daoConfigMap.get(TradeTypeDao.class).clone();
        tradeTypeDaoConfig.initIdentityScope(type);

        accsetDao = new AccsetDao(accsetDaoConfig, this);
        areaDao = new AreaDao(areaDaoConfig, this);
        departmentDao = new DepartmentDao(departmentDaoConfig, this);
        employeeDao = new EmployeeDao(employeeDaoConfig, this);
        operatorDao = new OperatorDao(operatorDaoConfig, this);
        traderDao = new TraderDao(traderDaoConfig, this);
        tradeTypeDao = new TradeTypeDao(tradeTypeDaoConfig, this);

        registerDao(Accset.class, accsetDao);
        registerDao(Area.class, areaDao);
        registerDao(Department.class, departmentDao);
        registerDao(Employee.class, employeeDao);
        registerDao(Operator.class, operatorDao);
        registerDao(Trader.class, traderDao);
        registerDao(TradeType.class, tradeTypeDao);
    }
    
    public void clear() {
        accsetDaoConfig.getIdentityScope().clear();
        areaDaoConfig.getIdentityScope().clear();
        departmentDaoConfig.getIdentityScope().clear();
        employeeDaoConfig.getIdentityScope().clear();
        operatorDaoConfig.getIdentityScope().clear();
        traderDaoConfig.getIdentityScope().clear();
        tradeTypeDaoConfig.getIdentityScope().clear();
    }

    public AccsetDao getAccsetDao() {
        return accsetDao;
    }

    public AreaDao getAreaDao() {
        return areaDao;
    }

    public DepartmentDao getDepartmentDao() {
        return departmentDao;
    }

    public EmployeeDao getEmployeeDao() {
        return employeeDao;
    }

    public OperatorDao getOperatorDao() {
        return operatorDao;
    }

    public TraderDao getTraderDao() {
        return traderDao;
    }

    public TradeTypeDao getTradeTypeDao() {
        return tradeTypeDao;
    }

}
